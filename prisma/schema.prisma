generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  events        Event[]
  tickets       Ticket[]
  organizations Organization[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Event {
  id            String   @id @default(cuid())
  title         String
  description   String?
  startDate     DateTime
  endDate       DateTime?
  location      String?
  isVirtual     Boolean  @default(false)
  capacity      Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  organizerId   String
  organizer     User     @relation(fields: [organizerId], references: [id])
  tickets       Ticket[]
  organization  Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}

model Ticket {
  id          String   @id @default(cuid())
  type        String
  price       Float
  quantity    Int
  eventId     String
  event       Event    @relation(fields: [eventId], references: [id])
  purchaserId String?
  purchaser   User?    @relation(fields: [purchaserId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  members     User[]
  events      Event[]
}